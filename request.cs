//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BitService
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class request
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public request()
        {
            this.commentMasterClient = new HashSet<commentMasterClient>();
            this.requestClientMaster = new HashSet<requestClientMaster>();
            this.homeTech = new HashSet<homeTech>();
        }
    
        public int requestID { get; set; }
        public System.DateTime startDate { get; set; }
        public string problemDescryption { get; set; }
        public Nullable<System.DateTime> completionDate { get; set; }
        public string repairParts { get; set; }
        public Nullable<int> statusID { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<commentMasterClient> commentMasterClient { get; set; }
        public virtual status status { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<requestClientMaster> requestClientMaster { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<homeTech> homeTech { get; set; }
        public string HomeTechDescription
        {
            get
            {
                return string.Join(", ", homeTech.Select(ht => $"{ht.homeTechType} {ht.homeTechModel}"));
            }
        }
        public string RequestStatus
        {
            get
            {
                return status?.requestStatus ?? "Неизвестный статус";
            }
        }
        public string FIO
        {
            get
            {
                return requestClientMaster?.FirstOrDefault()?.users?.fio ?? "Неизвестно";
            }
        }
        public string PhoneNumber
        {
            get
            {
                return requestClientMaster?.FirstOrDefault()?.users?.phone ?? "Неизвестно";
            }
        }
        

    }
}
